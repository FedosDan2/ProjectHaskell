#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
if ! command -v pip &> /dev/null; then
    echo "‚ùå pip –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

if ! command -v stack &> /dev/null; then
    echo "‚ùå stack (Haskell) –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ stack –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi


echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

# –°–±–æ—Ä–∫–∞ backend-–∞ (Haskell)
echo "üîß –°–±–æ—Ä–∫–∞ Haskell –ø—Ä–æ–µ–∫—Ç–∞..."
cd backend_Erbol || exit
stack build || { echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Haskell –ø—Ä–æ–µ–∫—Ç–∞"; exit 1; }
cd ..

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Python (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
cd frontend_Fedya || exit
pip install -r requirements.txt
pip install customtkinter
cd ..

echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
